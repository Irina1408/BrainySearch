@model BrainySearch.Models.Lectures.LectureDetailsViewModel
@{
    ViewBag.Title = "Lecture editing";
}

@section styles{
    <link href="~/Content/keywords.css" rel="stylesheet" type="text/css" />

    <style>
        .textarea-fullpage{
            max-width: none;
            padding: 10px;
            overflow: hidden;
            word-wrap: break-word;
            resize: horizontal;
            height: 52px;
        }
    </style>    
}

<h1>@Model.LectureTheme</h1>

@* Key words *@
<div class="row">
    <div class="col-sm-6 col-md-2">
        <h3 class='control-label' style="margin-top: 10px">Key words:</h3>
    </div>
    <div class="col-sm-6 col-md-10">
        <div id="keyWordsContainer" class="keyword-group" style="margin-top: 10px; margin-left: -10px" role="group">
        </div>
    </div>
</div>

@* Links *@
<div class="row" style="margin-top: 15px;">
    <div class="col-sm-6 col-md-2">
        <h3 class='control-label' style="margin-top: 10px">Links:</h3>
    </div>
    <div class="col-sm-6 col-md-10">
        <div id="linksContainer" class="link-group" style="margin-top: 15px" role="group">
        </div>
    </div>
</div>

@using (Html.BeginForm("SaveLecture", "Lectures", new { area = "Admin" }, FormMethod.Post))
{
    <div class="row" style="margin-left: 0px;">
        @Html.TextAreaFor(model => model.Text, new { @class = "textarea-fullpage", cols = 150 })
    </div>

    <button  style="margin-top: 10px" type="submit" class="btn btn-success">Save</button>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/autosize.min.js")

    <script type="text/javascript">

        // function for showing key words
        function ShowKeyWords() {
            var keyWordsArr = [@Html.Raw(String.Join("][", Json.Encode(Model.KeyWords)))];
            var keyWordsArray = keyWordsArr.pop();
            console.log("keyWordsArray", keyWordsArray);
            for (var i = 0; i < keyWordsArray.length; i++) {
                console.log("keyWordsArray item", keyWordsArray[i]);
                // add new control for every key word
                var newKeyWord = "<a class='keyword-active' style='padding-right: 10px'>" + keyWordsArray[i] + "</a>";
                $(newKeyWord).appendTo('#keyWordsContainer');
            }
        }

        function ShowLinks() {
            var resultsArr = [@Html.Raw(String.Join("][", Json.Encode(Model.Results)))];
            var resultsArray = resultsArr.pop();
            console.log("resultsArray", resultsArray);
            for (var i = 0; i < resultsArray.length; i++) {
                // add new control for every key word
                var newLink = "<a style='word-wrap:break-word' href=" + resultsArray[i].SourceLink + ">" + resultsArray[i].ShortLink + "</a>";
                $(newLink).appendTo('#linksContainer');
            }
        }

        $(window).load(function () {
            // show key words
            ShowKeyWords();
            // show links
            ShowLinks();
        });

        $(document).ready(function () {

        });

        autosize(document.querySelectorAll('textarea'));

    </script>
}